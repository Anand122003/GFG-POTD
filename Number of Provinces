//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function Template for C++

class Solution {
  private:
       void bfs(vector<vector<int>> adj, int V,vector<int> & visited,int start){
           queue<int> q;
           q.push(start);
           visited[start]=1;
           while(!q.empty()){
               int temp=q.front();
               q.pop();
            //   for(auto it: adj[temp-1]){
            //       if(it==1 && visited[]){
                       
            //       }
            //   }
               for(int k=0;k<V;k++){
                   if(adj[temp-1][k]==1 && visited[k+1]==0){
                       q.push(k+1);
                       visited[k+1]=1;
                   }
               }
           }
       }
    
    
    
    
  public:
    int numProvinces(vector<vector<int>> adj, int V) {
        int count=0;
        if(V==1){
            return 1;
        }
        
        vector<int> visited(V+1,0);
        for(int i=1;i<=V;i++){
            if(visited[i]==0){
                bfs(adj,V,visited,i);
                count++;
            }
        }
        return count;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int V,x;
        cin>>V;
        
        vector<vector<int>> adj;
        
        for(int i=0; i<V; i++)
        {
            vector<int> temp;
            for(int j=0; j<V; j++)
            {
                cin>>x;
                temp.push_back(x);
            }
            adj.push_back(temp);
        }
        

        Solution ob;
        cout << ob.numProvinces(adj,V) << endl;
    }
    return 0;
}
// } Driver Code Ends
